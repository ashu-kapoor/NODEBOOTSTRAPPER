/**************** Generated by NODEBOOTSTRAPPER Author: Ashutosh Kapoor GIT LINK
: https://github.com/ashu-kapoor/NODEBOOTSTRAPPER ****************/ const
{loadApp} = require('./loadApp') const routes = require('./routes'); //by
default register all routes //Routes to register, Array of custom middlewares to
be applied to all routes //and options and dbconnection promise //Please update
the follwing call with your code const routesArray = [
{{#each allMethods}}
  { method: routes.{{this.operationId}}Route.{{this.operationId}}, validatorFn:
  null, routeSpecificMiddlewares: null },
{{/each}}
]; const options = { useNoCache: true, allowCORSOrigin: "*", multiparserConfig:
null, port: 8080, useJsonParser: true, useUrlEncodedParser: false, }; /** *
@param {array} routesArray - routesArray to register * @param {array}
customMiddlewares - array of custom middlewares to be applied to this route *
@param {array} postMiddlewares - array of middlewares to be applied after all
routes * @param {object} options - options object deafault value are :
{useNoCache:true, allowCORSOrigin:'*', multiparserConfig=null, port=8080},
dbConnectionPromise=null) * @param {object} dbConnectionPromise - promise if
connection to DB on which to start server **/ loadApp(routesArray, [],[],
options , null);